{"version":3,"sources":["helpers/connectors.js","helpers/contract.js","Web3ReactConnectionComponent.js","App.js","index.js"],"names":["RPC_URLS","metamaskconnect","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","coinbaseconnect","WalletLinkConnector","url","appName","contractAddress","getContract","library","account","signer","getSigner","connectUnchecked","Contract","contractAbi","window","Buffer","require","Web3ReactConnectionComponent","web3reactContext","useWeb3React","ethereum","useState","metamaskIsInstalled","setmetamaskIsInstalled","walletConnected","setwalletConnected","desiredChain","loading","setloading","claimingNft","setClaimingNft","dataUpdated","setdataUpdated","dataUpdating","setdataUpdating","showModal","setShowModal","errorMessage","setErrorMessage","message","setMessage","predefinedsupply","supply","setSupply","mintedNFT","setmintedNFT","mintNumber","setMintNumber","minimumMintNumber","maxMint","setmaxMint","freeMint","setfreeMint","manualtokenPrice","tokenPrice","setTokenPrice","isPublicSaleActive","setPublicSaleActive","showWalletSection","wrongNetwork","setwrongNetwork","saleStarted","setsaleStarted","ethers","verify_network_chain","a","chainId","changeNetwork","useEffect","undefined","fetch_ContractDetails","isMetaMask","providers","Web3Provider","on","newNetwork","oldNetwork","handleAccountChange","handleChainChange","init","timer","setTimeout","clearTimeout","connector","error","localStorage","getItem","refresh_page","location","reload","connectMetamaskSimple","connectCoinbaseSimple","connectWalletConnectSimple","removeItem","contract","String","totalSupply","object","slice","Boolean","publicSale","mintStatus","PUBLIC_SALE_PRICE","NFTPrice","IntNumber","MAX_PUBLIC_MINT","NFTMaxMint","console","log","addressesMintedBalance","free_mint","take_action","id","openModal","mint","total_price","mintType","myContractSigner","estimateGas","value","utils","parseEther","resGasMethod","Number","transaction","hash","totalSupplyNumber","includes","code","deactivate","request","method","activate","setItem","walletConnectProvider","ex","provider","length","forEach","p","isCoinbaseWallet","params","networkIdNow","parseInt","enable","Modal","modalRef","useRef","ReactDom","createPortal","className","ref","onClick","e","target","current","src","document","getElementById","text","bgColor","color","center","width","height","href","alt","type","style","marginTop","disconnect","substring","rel","percent","disabled","el","setProperty","App","getLibrary","ReactDOM","render"],"mappings":"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","file":"static/js/main.bd5b49e2.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\r\n\r\nconst RPC_URLS = {\r\n\t1: 'https://mainnet.infura.io/v3/579384f3775a49519fe8fa456fd1ded3',\r\n\t2: \"https://eth-goerli.alchemyapi.io/v2/rn4UXbjwp3vFHrRH6-w-sbM96jDnf5VI\",\r\n\t3: \"https://rinkeby.infura.io/v3/579384f3775a49519fe8fa456fd1ded3\",\r\n\t4: \"https://polygon-mumbai.infura.io/v3/579384f3775a49519fe8fa456fd1ded3\",\r\n\t80001: \"https://polygon-mumbai.g.alchemy.com/v2/rn4UXbjwp3vFHrRH6-w-sbM96jDnf5VI\",\r\n};\r\n// https://polygon-mumbai.infura.io/v3/4458cf4d1689497b9a38b1d6bbf05e78\r\n\r\n//metamask\r\nexport const metamaskconnect = new InjectedConnector({\r\n\tsupportedChainIds: [1]\r\n\t// supportedChainIds: [80001]\r\n});\r\n\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n\trpc: {\r\n\t\t1: RPC_URLS[1]\r\n\t\t// 80001: RPC_URLS[4]\r\n\t},\r\n\tqrcode: true,\r\n\tpollingInterval: 15000\r\n});\r\n\r\n\r\nexport function resetWalletConnector(connector) {\r\n\tif (connector && connector instanceof WalletConnectConnector) {\r\n\t\tconnector.walletConnectProvider = undefined;\r\n\t}\r\n}\r\n\r\n//coinbase\r\nexport const coinbaseconnect = new WalletLinkConnector({\r\n\turl: RPC_URLS[1],\r\n\t// url: RPC_URLS[4],\r\n\tappName: 'MAOC',\r\n\tsupportedChainIds: [1],\r\n\t// supportedChainIds: [80001],\r\n});","import { Contract } from '@ethersproject/contracts';\r\n\r\n// export const contractAddress = '0xb966954bA5993d00881B51258E0EE0c2E47FC956'; // MAOC Mumbai Test\r\nexport const contractAddress = '0x5530c872d1b394b2b1b38fbf07387363ea4a3fbc'; // MAOC Mumbai Test\r\n\r\nexport const getContract = (library, account) => {\r\n\r\n    // console.log('contract library', library)\r\n    // console.log('contract account', account)\r\n\tconst signer = library.getSigner(account).connectUnchecked();\r\n\tvar contract = new Contract(contractAddress, contractAbi, signer);\r\n\treturn contract;\r\n};\r\n\r\nexport const contractAbi = [\r\n{\r\n\"inputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"constructor\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"ApprovalCallerNotOwnerNorApproved\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"ApprovalQueryForNonexistentToken\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"ApprovalToCurrentOwner\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"to\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"approve\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"ApproveToCaller\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"BalanceQueryForZeroAddress\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"string\",\r\n\"name\": \"_suffix\",\r\n\"type\": \"string\"\r\n}\r\n],\r\n\"name\": \"changeUriMetadataSuffix\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"_quantity\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"mint\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"payable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"MintToZeroAddress\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"MintZeroQuantity\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"OwnerQueryForNonexistentToken\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"TransferCallerNotOwnerNorApproved\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"TransferFromIncorrectOwner\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"TransferToNonERC721ReceiverImplementer\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"TransferToZeroAddress\",\r\n\"type\": \"error\"\r\n},\r\n{\r\n\"anonymous\": false,\r\n\"inputs\": [\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"address\",\r\n\"name\": \"owner\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"address\",\r\n\"name\": \"approved\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"Approval\",\r\n\"type\": \"event\"\r\n},\r\n{\r\n\"anonymous\": false,\r\n\"inputs\": [\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"address\",\r\n\"name\": \"owner\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"address\",\r\n\"name\": \"operator\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"indexed\": false,\r\n\"internalType\": \"bool\",\r\n\"name\": \"approved\",\r\n\"type\": \"bool\"\r\n}\r\n],\r\n\"name\": \"ApprovalForAll\",\r\n\"type\": \"event\"\r\n},\r\n{\r\n\"anonymous\": false,\r\n\"inputs\": [\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"address\",\r\n\"name\": \"previousOwner\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"address\",\r\n\"name\": \"newOwner\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"name\": \"OwnershipTransferred\",\r\n\"type\": \"event\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"renounceOwnership\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"_owner\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"name\": \"resetaddressMintBalance\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"from\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"to\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"safeTransferFrom\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"from\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"to\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n},\r\n{\r\n\"internalType\": \"bytes\",\r\n\"name\": \"_data\",\r\n\"type\": \"bytes\"\r\n}\r\n],\r\n\"name\": \"safeTransferFrom\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"operator\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"bool\",\r\n\"name\": \"approved\",\r\n\"type\": \"bool\"\r\n}\r\n],\r\n\"name\": \"setApprovalForAll\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"string\",\r\n\"name\": \"_placeholderTokenUri\",\r\n\"type\": \"string\"\r\n}\r\n],\r\n\"name\": \"setPlaceHolderUri\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"string\",\r\n\"name\": \"_baseTokenUri\",\r\n\"type\": \"string\"\r\n}\r\n],\r\n\"name\": \"setTokenUri\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"togglePublicSale\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"toggleReveal\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"anonymous\": false,\r\n\"inputs\": [\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"address\",\r\n\"name\": \"from\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"address\",\r\n\"name\": \"to\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"indexed\": true,\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"Transfer\",\r\n\"type\": \"event\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"from\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"to\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"transferFrom\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"newOwner\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"name\": \"transferOwnership\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"withdraw\",\r\n\"outputs\": [],\r\n\"stateMutability\": \"nonpayable\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"name\": \"addressesMintedBalance\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"owner\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"name\": \"balanceOf\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"get_balance\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"balance\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"_quantity\",\r\n\"type\": \"uint256\"\r\n},\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"_sender\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"name\": \"get_mints_price\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"price\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"getApproved\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"owner\",\r\n\"type\": \"address\"\r\n},\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"operator\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"name\": \"isApprovedForAll\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"bool\",\r\n\"name\": \"\",\r\n\"type\": \"bool\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"isRevealed\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"bool\",\r\n\"name\": \"\",\r\n\"type\": \"bool\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"MAX_PUBLIC_MINT\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"MAX_SUPPLY\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"name\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"string\",\r\n\"name\": \"\",\r\n\"type\": \"string\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"notRevealedUri\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"string\",\r\n\"name\": \"\",\r\n\"type\": \"string\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"owner\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"ownerOf\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"PUBLIC_SALE_PRICE\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"publicSale\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"bool\",\r\n\"name\": \"\",\r\n\"type\": \"bool\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"bytes4\",\r\n\"name\": \"interfaceId\",\r\n\"type\": \"bytes4\"\r\n}\r\n],\r\n\"name\": \"supportsInterface\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"bool\",\r\n\"name\": \"\",\r\n\"type\": \"bool\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"symbol\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"string\",\r\n\"name\": \"\",\r\n\"type\": \"string\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"tokenId\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"name\": \"tokenURI\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"string\",\r\n\"name\": \"\",\r\n\"type\": \"string\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"totalSupply\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256\",\r\n\"name\": \"\",\r\n\"type\": \"uint256\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [],\r\n\"name\": \"uriMetadataSuffix\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"string\",\r\n\"name\": \"\",\r\n\"type\": \"string\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n},\r\n{\r\n\"inputs\": [\r\n{\r\n\"internalType\": \"address\",\r\n\"name\": \"_owner\",\r\n\"type\": \"address\"\r\n}\r\n],\r\n\"name\": \"walletOfOwner\",\r\n\"outputs\": [\r\n{\r\n\"internalType\": \"uint256[]\",\r\n\"name\": \"\",\r\n\"type\": \"uint256[]\"\r\n}\r\n],\r\n\"stateMutability\": \"view\",\r\n\"type\": \"function\"\r\n}\r\n]","\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { metamaskconnect, walletconnect, resetWalletConnector, coinbaseconnect } from './helpers/connectors';\r\nimport { getContract, contractAddress } from './helpers/contract';\r\nimport React from 'react';\r\nimport { TripleMaze } from 'react-spinner-animated';\r\n\r\nimport 'react-spinner-animated/dist/index.css'\r\n\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useRef , Fragment } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport './index.css';\r\n\r\nimport { IntNumber } from 'walletlink/dist/types';\r\nwindow.Buffer = window.Buffer || require(\"buffer\").Buffer;\r\n\r\nconst Web3ReactConnectionComponent = () => {\r\n    const web3reactContext = useWeb3React();\r\n    const { ethereum } = window;\r\n    const [metamaskIsInstalled, setmetamaskIsInstalled] = useState(\"undefined\");\r\n    const [walletConnected, setwalletConnected] = useState(false);\r\n    // const [networkId, setnetworkId] = useState(-1)\r\n    // const [desiredChain, setDesiredChain] = useState(80001)\r\n    const [desiredChain, setDesiredChain] = useState(1)\r\n    // const [desiredChain] = useState(5)\r\n    \r\n\r\n    const [loading, setloading] = useState(true);\r\n    const [claimingNft, setClaimingNft] = useState(false);\r\n    const [dataUpdated, setdataUpdated] = useState(false);\r\n    const [dataUpdating, setdataUpdating] = useState(false);\r\n    \r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    \r\n    \r\n    const [predefinedsupply] = useState(5555)\r\n    const [supply, setSupply] = useState({})\r\n    const [mintedNFT, setmintedNFT] = useState('');\r\n\r\n    const [mintNumber, setMintNumber] = useState(2)\r\n    const [minimumMintNumber, setminimumMintNumber] = useState(1)\r\n    const [maxMint, setmaxMint] = useState(15);\r\n    const [freeMint, setfreeMint] = useState(false);\r\n\r\n    const [manualtokenPrice, setmanualtokenPrice] = useState('0.003');\r\n    const [tokenPrice, setTokenPrice] = useState('0.003');\r\n\r\n    const [isPublicSaleActive, setPublicSaleActive] = useState(false);\r\n\r\n    const [showWalletSection] = useState(true);\r\n    const [wrongNetwork, setwrongNetwork] = useState(true);\r\n    const [saleStarted, setsaleStarted] = useState(false);\r\n\r\n    const { ethers } = require(\"ethers\");\r\n\r\n    useEffect(() => {\r\n        if (web3reactContext.account !== undefined) {            \r\n            setwalletConnected(true);\r\n            fetch_ContractDetails();\r\n            \r\n        }\r\n        else {\r\n            setwalletConnected(false);\r\n        }\r\n    }, [web3reactContext.account])\r\n\r\n\r\n    //  Listen for any change in ethereum\r\n    useEffect(() => {\r\n        var metamaskIsInstalled = ethereum && ethereum.isMetaMask\r\n        setmetamaskIsInstalled(metamaskIsInstalled);\r\n        // console.log(\"metamaskIsInstalled\", metamaskIsInstalled)\r\n        \r\n        if (ethereum) {\r\n            const provider = new ethers.providers.Web3Provider(ethereum, \"any\")\r\n            provider.on(\"network\", (newNetwork, oldNetwork) => {\r\n                // setnetworkId(newNetwork);\r\n                if (oldNetwork) {\r\n                    // console.log(\"Network Changed\")\r\n                    changeNetwork();\r\n                }\r\n            });\r\n\r\n            ethereum?.on(\"accountsChanged\", handleAccountChange);\r\n            ethereum?.on(\"networkChanged\", handleChainChange);\r\n        }\r\n        else {\r\n            setErrorMessage(\"Web3 Wallet not Found, try changing browser\")\r\n        }\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        init();\r\n        const timer = setTimeout(() => {\r\n            setloading(false);\r\n        }, 10000);\r\n        return () => clearTimeout(timer);\r\n    }, [])\r\n    \r\n    \r\n    useEffect(() => {\r\n        setsaleStarted(isPublicSaleActive === true)\r\n\r\n        if (web3reactContext.connector !== undefined && web3reactContext.account !== undefined) {\r\n            try {\r\n                verify_network_chain();\r\n                if (dataUpdated === false && dataUpdating === false) {\r\n                    // console.log(\"5\", web3reactContext)\r\n                    // fetch_ContractDetails();\r\n                    setdataUpdating(true);\r\n                }    \r\n            } catch (error) {\r\n                setErrorMessage(\"Error while Fetching Data from Contract\");\r\n            }\r\n        }\r\n\r\n        else {\r\n            if (localStorage.getItem(\"wallet_type\")) {\r\n                verify_network_chain();\r\n                // disconnect();\r\n                \r\n            }\r\n            setwrongNetwork(false);\r\n            // setloading(false);\r\n        }\r\n\r\n    },);\r\n\r\n    \r\n    async function verify_network_chain() {\r\n        if (desiredChain !== web3reactContext.chainId) {\r\n            setwrongNetwork(true);\r\n            if (desiredChain === 1) {\r\n                setErrorMessage(\"Switch to Mainnet Ethereum\");\r\n                changeNetwork();\r\n            } else if (desiredChain === 2) {   \r\n                setErrorMessage(\"Switch to Rinkbey Testnet\");\r\n                changeNetwork();\r\n            }\r\n            else if (desiredChain === 5) {   \r\n                setErrorMessage(\"Switch to Goerli Testnet\");\r\n                changeNetwork();\r\n            }\r\n            else if (desiredChain === 80001) {   \r\n                setErrorMessage(\"Switch to Polygon Mumbai Testnet\");\r\n                changeNetwork();\r\n            }\r\n        }\r\n        else {\r\n            setwrongNetwork(false);\r\n            // if (errorMessage.includes(\"Switch to \")) {\r\n            //     setErrorMessage(\"\");\r\n            // }\r\n        }\r\n    };\r\n    \r\n    \r\n    const refresh_page = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    const handleAccountChange = (...args) => {\r\n        refresh_page();\r\n    };\r\n    const handleChainChange = (...args) => {\r\n        refresh_page();\r\n    };\r\n\r\n    const init = async () => {\r\n        try {\r\n            if (localStorage.getItem(\"wallet_type\") === \"metamask\") {\r\n                setloading(true);\r\n                await connectMetamaskSimple();\r\n            }\r\n            else if (localStorage.getItem(\"wallet_type\") === \"coinbase\") {\r\n                connectCoinbaseSimple();\r\n            }\r\n            else if (localStorage.getItem(\"wallet_type\") === \"walletconnect\") {\r\n                connectWalletConnectSimple();\r\n            }\r\n            else {\r\n                setloading(false);\r\n                localStorage.removeItem(\"wallet_type\");\r\n            }\r\n        } catch (errorMessage) {\r\n            // console.log(\"errorMessage\", errorMessage)\r\n        }\r\n    }\r\n\r\n    \r\n    async function fetch_ContractDetails() {\r\n        // setnetworkId(1);\r\n        setloading(true);\r\n        setErrorMessage(\"\");\r\n        changeNetwork();\r\n        // try {\r\n            // console.log(\"fetch_ContractDet 1\",web3reactContext)\r\n            if (web3reactContext.connector === undefined || web3reactContext.account === undefined || web3reactContext.chainId === undefined) {\r\n                return\r\n            }\r\n            verify_network_chain();\r\n            // console.log(\"Why passed to here\")\r\n            const contract = getContract(web3reactContext.library, web3reactContext.account);\r\n            const totalSupply = String(await contract.totalSupply());\r\n            \r\n            // console.log(\"totalSupply\", totalSupply);\r\n            // const totalSupply = String(\"555\");\r\n            // let overrides = {\r\n            //     // gasLimit: 9000000000000000,\r\n            //     // gasLimit: 9000990111740990, //max\r\n            //     // gasLimit: 280000000, //200\r\n            //     gasLimit: 58000000000, //250\r\n            // }\r\n\r\n            // console.log(ethers.utils.formatEther(tempPrice))\r\n            const object = {\r\n                \"totalSupply\": String(totalSupply),\r\n                \"percent\": String(String((totalSupply / predefinedsupply * 100)).slice(0, 4) + '%')\r\n            }\r\n\r\n            setSupply(object);\r\n            \r\n            // console.log(\"premintStatus\", premintStatus);\r\n            let mintStatus = Boolean(await contract.publicSale());\r\n            // let mintStatus = Boolean(true);\r\n            // mintStatus = \"false\";\r\n            // console.log(\"mintStatus\", mintStatus);\r\n            \r\n            let NFTPrice = String(await contract.PUBLIC_SALE_PRICE()/1000000000000000000);\r\n            let NFTMaxMint = IntNumber(await contract.MAX_PUBLIC_MINT());\r\n            console.log(\"a\", NFTPrice)\r\n            console.log(\"b\", NFTMaxMint)\r\n            \r\n            // let NFTPrice = String(\"0.003\");\r\n            // let NFTMaxMint = IntNumber(15);\r\n            setTokenPrice(NFTPrice)\r\n            setmaxMint(NFTMaxMint)\r\n            \r\n            if (mintStatus) {\r\n                // console.log(\"2\")\r\n                setPublicSaleActive(true);\r\n            }\r\n            \r\n            let free_mint = IntNumber(await contract.addressesMintedBalance(web3reactContext.account));\r\n            if (free_mint==0){\r\n                console.log(\"free_mint\")\r\n                setMessage(\"1 Free Mint Available\")\r\n                setfreeMint(true);\r\n            }\r\n            else {\r\n                console.log(\"nooo!! free mint, already minted\", free_mint)\r\n            }\r\n            \r\n            setdataUpdated(true);\r\n            setdataUpdating(false);\r\n            setloading(false)\r\n            console.log(\"data updated\");\r\n    \r\n    }\r\n\r\n\r\n    async function take_action(id) {\r\n        \r\n        // console.log(\"take_action web3reactContext\", web3reactContext)\r\n        if (web3reactContext.connector === undefined || web3reactContext.account === undefined) {\r\n            openModal();\r\n            // console.log(\"Connect Wallet Model Opened\")\r\n            return\r\n        }\r\n        else if (web3reactContext.chainId !== desiredChain) {\r\n            verify_network_chain();\r\n\r\n            changeNetwork();\r\n            // console.log(\"error in take_action\")\r\n            setMessage(\"\")\r\n            return\r\n        }\r\n        // console.log(\"Connection Passed\")\r\n        // fetch_ContractDetail();\r\n        // console.log('tokenPrice',tokenPrice)\r\n        let total_price;\r\n               \r\n        \r\n        if (id === 1) {\r\n            total_price = String(tokenPrice * mintNumber);\r\n            mint(total_price, \"mint\")\r\n        }\r\n    };\r\n\r\n    async function mint(total_price, mintType = 'undefined') {\r\n        if (typeof ethereum !== 'undefined') {\r\n            \r\n            \r\n            setClaimingNft(true);\r\n            const myContractSigner = getContract(web3reactContext.library, web3reactContext.account);\r\n            try {\r\n                \r\n                let transaction;\r\n                if (mintType === 'mint') {\r\n                    console.log(\"minting method\")\r\n                    \r\n                    let resGasMethod;\r\n                    try {\r\n                        resGasMethod = await myContractSigner.estimateGas.mint(mintNumber, { value: ethers.utils.parseEther(total_price) });\r\n                        resGasMethod = Number(resGasMethod);\r\n                        resGasMethod = IntNumber(resGasMethod*1.05);\r\n                        // console.log(\"resGasMethod method\", resGasMethod)\r\n                    } catch (error) {\r\n                        resGasMethod = 200000\r\n                        console.log(\"error est gas\")\r\n                    }\r\n                        \r\n                    console.log(\"est\", resGasMethod)\r\n                    if (freeMint) {\r\n                        console.log(\"Previous\", total_price)\r\n                        total_price -= tokenPrice\r\n                        console.log(\"free excluded\", total_price)\r\n                    }\r\n\r\n                    // transaction = await myContractSigner.mint(mintNumber, { value: ethers.utils.parseEther(total_price), gasLimit: resGasMethod });\r\n                    // await transaction.wait();\r\n\r\n                }\r\n                // }\r\n                else {\r\n                    return\r\n                }\r\n\r\n                console.log(\"Transaction Done\",transaction, \"https://etherscan.io/tx/\" + transaction.hash);\r\n                if (desiredChain === 1) {\r\n                    let totalSupplyNumber = IntNumber(supply.totalSupply) + 1\r\n                    setmintedNFT(\"https://opensea.io/assets/ethereum/\" +contractAddress +\"/\" +totalSupplyNumber)\r\n                    // console.log(\"View your NFT at\", \"opensea.io/assets/ethereum/\" +contractAddress +\"/\" +totalSupplyNumber)\r\n                }else if (desiredChain === 4) {\r\n                    let totalSupplyNumber = IntNumber(supply.totalSupply) + 1\r\n                    setmintedNFT(\"https://testnets.opensea.io/assets/rinkeby/\" +contractAddress +\"/\" +totalSupplyNumber)\r\n                    // console.log(\"View your NFT at\", \"testnets.opensea.io/assets/rinkeby/\" +contractAddress +\"/\" +totalSupplyNumber)\r\n                }else if (desiredChain === 5) {\r\n                    let totalSupplyNumber = IntNumber(supply.totalSupply) + 1\r\n                    setmintedNFT(\"https://testnets.opensea.io/assets/goerli/\" +contractAddress +\"/\" +totalSupplyNumber)\r\n                    // console.log(\"View your NFT at\", \"testnets.opensea.io/assets/rinkeby/\" +contractAddress +\"/\" +totalSupplyNumber)\r\n                }\r\n                \r\n                setdataUpdated(false);\r\n                setMessage(\"MAOC Minted Successfully\");\r\n                fetch_ContractDetails();\r\n                setErrorMessage(\"\");\r\n                // console.log(\"Error Message CLeared\")\r\n                setClaimingNft(false);\r\n                refresh_page();\r\n\r\n            }\r\n            catch (err) {\r\n                // console.log(\"Error\",err?.error.code,\"-\", err?.error.message)\r\n                console.log(\"Error2\", err)\r\n                \r\n                if (err?.message.includes(\"DAppBrowser\")) {\r\n                    setErrorMessage(\"Mobile Browser Error\");\r\n                }\r\n                // else {\r\n                //     er_mes = er_mes + err +\"-\";\r\n                //     setErrorMessage(\"Error\"+ er_mes);\r\n                // }\r\n                \r\n                if (err?.code === \"INVALID_ARGUMENT\") {\r\n                    // console.log(\"User Declined Payment\")\r\n                    setErrorMessage(\"Whitelist Error\");\r\n                    setMessage(\"Backend Updating! Try Back in a Minute\");\r\n                }\r\n                \r\n                if (err?.code === 4001) {\r\n                    // console.log(\"User Declined Payment\")\r\n                    setErrorMessage(\"User Declined Transaction\");\r\n                }\r\n\r\n                if (err?.error?.code === -32000) {\r\n                    // console.log(\"You have Insufficient Balance\")\r\n                    setErrorMessage(\"You have Insufficient Balance\");\r\n                }\r\n\r\n                if (err?.code === -32002) {\r\n                    // console.log(\"Transaction In Process\")\r\n                    setErrorMessage(\"Transaction In Process - Open Wallet\");\r\n                }\r\n\r\n                if (err?.code === -32603) {\r\n                    console.log(\"Transaction In Process\")\r\n                    try {\r\n                        if (err?.message.includes(\"Cannot set properties of undefined\")) {\r\n                            setErrorMessage(\"Metamask Error\");\r\n                        }\r\n                    }\r\n                    catch {\r\n                        setErrorMessage(\"Error\",err?.message );\r\n                    }\r\n                }\r\n\r\n                if (err?.error?.code === -32603) {\r\n                    if (err?.error?.message === \"execution reverted: Not on whitelist\") {\r\n                        setErrorMessage(\"Address Not Whitelisted\");\r\n                        setPublicSaleActive(true);\r\n                    }\r\n                    else if (err?.error?.message === \"execution reverted: No presale for now\") {\r\n                        setErrorMessage(\"Presale Not Started Yet\");\r\n                    }\r\n                    else if (err?.error?.message === \"execution reverted: Exceeded MAX Token Mint per Address\") {\r\n                        setErrorMessage(\"Sorry You have already utilized Whitelist Spot!\");\r\n                        setPublicSaleActive(true);\r\n                    }\r\n                    else {\r\n                        setErrorMessage(\"Unexpected Error\");\r\n                    }\r\n                }\r\n\r\n                // setErrorMessage(err.message);\r\n                setClaimingNft(false);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setMessage(\"Ethereum not Found, Change Browser\");\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    //web3react metamask\r\n    const connectMetamaskSimple = async () => {\r\n        try {\r\n            setmetamaskIsInstalled(ethereum && ethereum.isMetaMask);\r\n            if (typeof metamaskIsInstalled === 'undefined') {\r\n                // console.log('web3reactContext',web3reactContext)\r\n                setShowModal(false);\r\n                setErrorMessage(\"Metamask Not Installed\")\r\n                web3reactContext.deactivate();\r\n                // console.log(\"Metamask not INstalled\", web3reactContext)\r\n                \r\n                return\r\n            }\r\n\r\n            await ethereum.request({\r\n                method: 'eth_requestAccounts'\r\n            })\r\n            // console.log(\"accounts\", accounts)\r\n            web3reactContext.activate(metamaskconnect, undefined, true);\r\n            \r\n\r\n            setShowModal(false);\r\n            setMessage(\"Metamask Wallet Connected\");\r\n            // setwalletConnected(true);\r\n            localStorage.setItem(\"wallet_type\", \"metamask\");\r\n            // console.log(\"metamask connect 2\", web3reactContext)\r\n\r\n\r\n        } catch (ex) {\r\n            // console.log(\"Wallet Connection Error\", ex);\r\n            localStorage.setItem(\"wallet_type\", \"\");\r\n            if (ex?.code === -32002) {\r\n                // console.log(\"Transaction In Process\")\r\n                setErrorMessage(\"Transaction In Process - Open Metamask\");\r\n            }else{\r\n                setErrorMessage(\"Metamask Connection Error\");\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n    // web3react walletconnect\r\n    const connectWalletConnectSimple = async () => {\r\n        try {\r\n            resetWalletConnector(walletconnect);\r\n            web3reactContext.activate(walletconnect);\r\n            setShowModal(false);\r\n            setMessage(\"Connected using WalletConnect\");\r\n            // setwalletConnected(true);\r\n            localStorage.setItem(\"wallet_type\", \"walletconnect\");\r\n            \r\n            // }\r\n            // console.log(\"coinbase\", web3reactContext.connector,web3reactContext, web3reactContext.account)\r\n        } catch (ex) {\r\n            setErrorMessage(\"WalletConnect Connection Error\")\r\n            // console.log(\"WalletConnect Connection Error\", ex);\r\n        }\r\n    };\r\n\r\n    //web3react coinbase\r\n    const connectCoinbaseSimple = async () => {\r\n\r\n        try {\r\n            if (typeof window.ethereum !== \"undefined\") {\r\n                let provider = window.ethereum;\r\n\r\n                if (window.ethereum.providers?.length) {\r\n                    window.ethereum.providers.forEach(async (p) => {\r\n                        if (p.isCoinbaseWallet) {\r\n                            provider = p;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                await provider.request({\r\n                    method: \"eth_requestAccounts\",\r\n                    params: [],\r\n                });\r\n            }\r\n            await web3reactContext.activate(coinbaseconnect);\r\n\r\n            setShowModal(false);\r\n            setMessage(\"Coinbase Wallet Connected\");\r\n            // setwalletConnected(true);\r\n            localStorage.setItem(\"wallet_type\", \"coinbase\");\r\n            \r\n\r\n\r\n        } catch (ex) {\r\n            setErrorMessage(\"Coinbase Wallet Connection Error\")\r\n            // console.log(\"Coinbase Wallet Connection Error\", ex);\r\n        }\r\n\r\n    };\r\n\r\n    const changeNetwork = async () => {\r\n        try {\r\n            if (ethereum) {\r\n\r\n                const networkIdNow = await ethereum.request({\r\n                    method: \"net_version\",\r\n                });\r\n\r\n                if (desiredChain !== parseInt(networkIdNow)) {\r\n                    try {\r\n                        await ethereum.enable();\r\n                        // console.log(\"Change Network\")\r\n                        if (desiredChain === 1) {\r\n                            // setErrorMessage(\"You are not on Ethereum Mainnet\");\r\n                            await ethereum.request({\r\n                                method: 'wallet_switchEthereumChain',\r\n                                params: [{ chainId: '0x1' }],\r\n                            });\r\n                        }\r\n                        else if (desiredChain===4) {\r\n                            // setErrorMessage(\"You are not on Ethereum Rinkbey Testnet\");\r\n                            await ethereum.request({\r\n                                method: 'wallet_switchEthereumChain',\r\n                                params: [{ chainId: '0x4' }],\r\n                            });\r\n                        }\r\n                        else if (desiredChain===5) {\r\n                            // setErrorMessage(\"You are not on Ethereum Goerli Testnet\");\r\n                            await ethereum.request({\r\n                                method: 'wallet_switchEthereumChain',\r\n                                params: [{ chainId: '0x5' }],\r\n                            });\r\n                        }\r\n                        \r\n                        \r\n                        window.location.reload(false);\r\n                    } catch (errorMessage) {\r\n                        // console.log(errorMessage);\r\n                        if (errorMessage.code === 4902) {\r\n                            if (desiredChain === 1) {\r\n                                setErrorMessage(\"Add Ethereum Mainnet to your wallet\");\r\n                            }\r\n                            else if (desiredChain===4) {\r\n                                setErrorMessage(\"Add Ethereum Rinkbey Testnet to your wallet\");\r\n                            }\r\n                            else if (desiredChain===5) {\r\n                                setErrorMessage(\"Add Ethereum Goerli Testnet to your wallet\");\r\n                            }\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            // console.log(\"Cannot Switch to Network \", error)\r\n            setErrorMessage(\"Cannot Switch to Network \", error)\r\n        }\r\n    };\r\n\r\n    const disconnect = () => {\r\n        try {\r\n            web3reactContext.deactivate();\r\n            setwalletConnected(false);\r\n            setdataUpdated(false);\r\n            setErrorMessage(\"\");\r\n            setMessage(\"\");\r\n            setmintedNFT(\"\");\r\n            localStorage.removeItem(\"wallet_type\");\r\n            setTokenPrice(manualtokenPrice);\r\n\r\n        } catch (ex) {\r\n            // console.log(ex);\r\n        }\r\n    };\r\n    \r\n    const openModal = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const Modal = ({ setShowModal }) => {\r\n        // close the modal when clicking outside the modal.\r\n        const modalRef = useRef();\r\n        const closeModal = (e) => {\r\n            if (e.target === modalRef.current) {\r\n                setShowModal(false);\r\n            }\r\n        };\r\n        \r\n        //render the modal JSX in the portal div.\r\n        return ReactDom.createPortal(\r\n            <div className=\"container\" ref={modalRef} onClick={closeModal}>\r\n                <div className=\"modal cust_modal row text-center\">\r\n                    <div className=\"col-sm-12\">\r\n\r\n                    { errorMessage && (\r\n                                <>\r\n                                    <div className='text-center mint_under_button'>\r\n                                        <p className=\"bg-danger text-light\">{errorMessage}</p>\r\n                                    </div>\r\n                                </>\r\n                                )}\r\n                        <Fragment>\r\n                            <div className=\"row text-center\">\r\n                                <div className=\"col-sm-12\">\r\n                                    {/* <h2>Connect Wallets</h2> */}\r\n                                    <h2 className=\"h2head\">Connect Wallet</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row text-center mt-3 mb-3 \">\r\n                                <div className=\"col-sm-12 text-center\">\r\n                                    <button onClick={connectMetamaskSimple} className=\"fourth btn btn_metamask btn_cion \">\r\n                                        <img className=\"icon_wallets\" src=\"assets/images/metamask.svg\" />\r\n                                        <span className=\"text_icn\"> Metamask </span>\r\n                                    </button>\r\n                            \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row text-center mt-3 mb-3 \">\r\n                                <div className=\"col-sm-12\">\r\n                                    <button onClick={connectWalletConnectSimple} className=\"btn_cion btn_connect btn btn-info\">\r\n                                        <img className=\"icon_wallets\" src=\"assets/images/walletconnect.svg\" />\r\n                                        <span className=\"text_icn\"> WalletConnect </span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row text-center mt-3 mb-3 \">\r\n                                <div className=\"col-sm-12\">\r\n                                    <button onClick={connectCoinbaseSimple} className=\"btn_cion btn_cb btn_cion_animation btn btn-info\">\r\n                                        <img className=\"icon_wallets\" src=\"assets/images/coinbasewallet.svg\" />\r\n                                        <span className=\"text_icn\"> CoinBase </span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                    <button className='closemdlbtn' onClick={() => setShowModal(false)}>X</button>\r\n\r\n                </div>\r\n            </div>, document.getElementById(\"portal\")\r\n        );\r\n    };\r\n\r\n    async function decreaseMintNumber() {\r\n        if (mintNumber > minimumMintNumber)\r\n        {\r\n            setMintNumber(mintNumber - 1);\r\n        }\r\n    };\r\n    async function increaseMintNumber() {\r\n        if (mintNumber < maxMint)\r\n        {\r\n            setMintNumber(mintNumber + 1);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n    \r\n    {loading || dataUpdating ?\r\n        (<>\r\n            <TripleMaze  text={\"Connecting with Blockchain\"} bgColor={\"#28a745\"} color={\"#fff\"} center={true} width={\"150px\"} height={\"150px\"}/>\r\n        </>\r\n        ):(\r\n        <>\r\n            \r\n        <div className=\"container-fluid bg-nav main_section_fullpage\" >  \r\n        \r\n             \r\n            <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n                <a className=\"navbar-brand \" href=\"/\">\r\n                    <img className=\"logo_s \" alt='MUTANT APE ORDINALS CLUB' src=\"assets/images/logo.jpeg\"/>\r\n                    {/* <h2 style={{ color:'#fff' }}>MUTANT APE ORDINALS CLUB</h2> */}\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n        \r\n                <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n\r\n                        \r\n                        {wrongNetwork ?\r\n                        (<>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link text-red\" href=\"#\"><button className='disconnect_wallet fourth'>Wrong Network</button></a>\r\n                            </li>\r\n                        </>\r\n                        ):(\r\n                        <></>\r\n                        )}\r\n                        \r\n                        {walletConnected ?\r\n                        (<>\r\n                            <li className=\"nav-item\">\r\n                                                    <a className=\"nav-link \"><button className='disconnect_wallet fourth' style={{ marginTop:\"-20px\"}} onClick={() => disconnect()}>Disconnect</button>\r\n                            </a>\r\n                            </li>\r\n                        </>\r\n                        ):(\r\n                        <></>\r\n                        )}\r\n\r\n                        { web3reactContext.account &&\r\n                            <li className=\"nav-item\">\r\n                                    <a className=\"nav-link wallet_address \">{web3reactContext.account.substring(0,5)}....{web3reactContext.account.substring(38,42)}</a>\r\n                            </li>\r\n                        }\r\n\r\n                        {/* <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#mint\">Mint</a>\r\n                        </li> */}\r\n                        {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-link\"  href=\"#roadmap\">Launch Dates</a>\r\n                        </li> */}\r\n                        <li className=\"nav-item\">\r\n                                        <a target=\"_blank\" href=\"https://etherscan.io/token/0x5530c872d1b394b2b1b38fbf07387363ea4a3fbc\">\r\n        <img className='social_btn' src=\"assets/images/etherscan.png\" alt=\"\"></img>\r\n      </a>\r\n                                        </li>\r\n     \r\n                        <li className=\"nav-item\">\r\n                                 <a target=\"_blank\" href=\"https://twitter.com/MAOCNFTs\">\r\n        <img className='social_btn' src=\"assets/images/twitter.png\" alt=\"\"></img>\r\n      </a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" target=\"_blank\" rel=\"noreferrer\" href=\"http://runpass.com/\">Get Whitelisted</a>\r\n                        </li> */}\r\n                                \r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-12 first_div main_connect_section\">\r\n                    \r\n                    { showWalletSection && (\r\n                    <>  \r\n                                \r\n                        <div className=\"col-sm-12\">\r\n                                    \r\n                            <div id=\"portal\">\r\n                                {showModal ? <Modal setShowModal={setShowModal} /> : null}\r\n                            </div>\r\n                            <div className=\"herofour\">\r\n                                \r\n                                        \r\n                                { errorMessage && (\r\n                                <>\r\n                                    <div className='text-center mint_under_button'>\r\n                                        <p className=\"bg-danger text-light\">{errorMessage}</p>\r\n                                    </div>\r\n                                </>\r\n                                )}\r\n                                \r\n                                \r\n                                { message &&\r\n                                    <div className='text-center mint_under_button'>\r\n                                        <p className=\"bg-success text-light\">{message}</p>\r\n                                    </div>\r\n                                }\r\n                                { mintedNFT &&\r\n                                    <div className='text-center mint_under_button'>\r\n                                        <a href={mintedNFT} target=\"_blank\" rel=\"noreferrer\"><p className=\"bg-info text-light\">See Latest MAOC on Opensea</p></a>\r\n                                    </div>\r\n                                }\r\n                                \r\n                                        \r\n                                { walletConnected ?\r\n                                (<>\r\n                                    {dataUpdated ?\r\n                                    (<>\r\n                                        {supply.totalSupply >= predefinedsupply  ?\r\n                                        (<>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm  text-center \">\r\n                                                    <div className=\"buttons_mint_div\">\r\n                                                        <button className=\" m-2 btn mintbtn\">Sold Out!</button>\r\n                                                    </div>\r\n                                                    \r\n                                                    {/* <div className='text-center mt-4 mint_under_button'>\r\n                                                        <a href='{mintedNFT}' target=\"_blank\" rel=\"noreferrer\" ><p className=\"bg-info text-light\">Trade on Opensea</p></a>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </>)\r\n                                        :\r\n                                        (<>\r\n                                            {isPublicSaleActive ? (\r\n                                            <>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm  text-center \">\r\n                                                        {/* <p className=\"mintedcounts\"  >{supply.totalSupply} / {predefinedsupply} </p> */}\r\n                                                                                                              \r\n                                                        <div className=\"progress shine\" data-width=\"{supply.percent}\" >\r\n                                                            <div className=\"progress-text\">{supply.totalSupply}/{predefinedsupply}</div>\r\n                                                            <div className=\"progress-bar\" style={{ width: supply.percent }}>\r\n                                                                <div className=\"progress-text\">{supply.percent}</div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm  text-center \">\r\n                                                        <div className=\"buttons_mint_div\">\r\n                                                            <button className={`mintbtn m-2 opacity-${mintNumber<2 ? \"50\" : \"100\"}`} disabled={mintNumber<2 ? 1 : 0} onClick={decreaseMintNumber}>-</button>\r\n                                                            <button className=\"mintbtn m-2\" disabled={claimingNft ? 1 : 0} onClick={() => take_action(1)}>{claimingNft ? \"BUSY\" : \"MINT\"} {mintNumber}</button>\r\n\r\n                                                            <button className={`mintbtn m-2 opacity-${mintNumber>=maxMint ? \"50\" : \"100\"}`} disabled={mintNumber===maxMint ? 1 : 0} onClick={increaseMintNumber}>+</button>\r\n                                                            \r\n                                                                <span className=\"d-block text-white text-bold\">Price: {tokenPrice}Ξ</span>\r\n                                                            <span className=\"d-block text-white text-bold\">Max Mint {maxMint}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                            ): (\r\n                                            <></>\r\n                                            )}\r\n                                            \r\n                                            \r\n                                            { saleStarted ? (\r\n                                            <>\r\n                                                \r\n                                            </>\r\n                                            ): (\r\n                                            <>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm  text-center \">\r\n                                                        <div className=\"buttons_mint_div\">\r\n                                                            <button ref={el => {\r\n                                                                    if (el) {\r\n                                                                        el.style.setProperty('background-color', '#ffff', 'important');\r\n                                                                        el.style.setProperty('color', 'black', 'important');\r\n                                                                    }\r\n                                                                }}\r\n                                                                className=\"mintbtn m-2\" >PUBLIC MINT HAS NOT STARTED</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                            )}\r\n                                            \r\n                                        </>\r\n                                        )}\r\n                                    </>) :\r\n                                    (\r\n                                    <>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm  text-center \">\r\n                                                <div className=\"buttons_mint_div\">\r\n                                                    <button className=\"mintbtn m-2\" disabled={dataUpdating ? 1 : 0} onClick={() => fetch_ContractDetails()}>{dataUpdating ? \"Updating\" : \"Update\"}</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                    )}\r\n                                </>)\r\n                                :\r\n                                (\r\n                                <>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm text-center\">\r\n                                            <span className=\"d-block text-white font-weight-bold\">1 free Mint</span>\r\n                                            <span className=\"d-block text-white font-weight-bold\">Extra Mint Price: {tokenPrice}Ξ</span>\r\n                                            <button className=\"mt-3 mint_under_button text-a connect_wallet_btn\" onClick={() => take_action(3)} >CONNECT WALLET</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                )}\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n  \r\n    </>\r\n    )}\r\n    \r\n    </>\r\n    );\r\n};\r\n\r\nexport default Web3ReactConnectionComponent;\r\n","import { Web3ReactProvider } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport Web3ReactConnectionComponent from './Web3ReactConnectionComponent';\r\n// window.onload = function() {\r\n// \tlocalStorage.clear();\r\n// };\r\n\r\nfunction App() {\r\n\tconst getLibrary = (provider) => {\r\n\t\tconst library = new Web3Provider(provider, 'any');\r\n\t\tlibrary.pollingInterval = 15000;\r\n\t\treturn library;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Web3ReactProvider getLibrary={getLibrary}>\r\n\t\t\t\t<Web3ReactConnectionComponent />\r\n\t\t</Web3ReactProvider>\r\n\t);\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}